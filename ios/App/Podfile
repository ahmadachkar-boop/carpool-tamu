require_relative '../../node_modules/@capacitor/ios/scripts/pods_helpers'

platform :ios, '14.0'
use_frameworks!

# workaround to avoid Xcode caching of Pods that requires
# Product -> Clean Build Folder after new Cordova plugins installed
# Requires CocoaPods 1.6 or newer
install! 'cocoapods', :disable_input_output_paths => true

def capacitor_pods
  pod 'Capacitor', :path => '../../node_modules/@capacitor/ios'
  pod 'CapacitorCordova', :path => '../../node_modules/@capacitor/ios'
  pod 'CapacitorGeolocation', :path => '../../node_modules/@capacitor/geolocation'
  pod 'CapacitorLocalNotifications', :path => '../../node_modules/@capacitor/local-notifications'
  pod 'CapacitorPushNotifications', :path => '../../node_modules/@capacitor/push-notifications'
end

target 'App' do
  capacitor_pods
  # Add your Pods here
end

post_install do |installer|
  assertDeploymentTarget(installer)

  # Remove any Firebase framework references that might have been auto-linked
  # This app uses Firebase JavaScript SDK, not native iOS SDK
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      # Remove Firebase frameworks from linker flags if present
      if config.build_settings['OTHER_LDFLAGS']
        config.build_settings['OTHER_LDFLAGS'].delete('-framework "FBLPromises"')
        config.build_settings['OTHER_LDFLAGS'].delete('-framework "FirebaseCore"')
        config.build_settings['OTHER_LDFLAGS'].delete('-framework "FirebaseMessaging"')
        config.build_settings['OTHER_LDFLAGS'].delete('-framework "FirebaseInstallations"')
      end
    end
  end
end
